knitr::opts_chunk$set(echo = TRUE)
# Library imports
library(tidyverse)
library(data.table)
#install.packages("visdat")
library(visdat)
library(ggplot2)
#install.packages("naniar")
library(naniar)
library(GGally) #ggplot2 extension for pairs matrix
#install.packages("psych")
library(psych)
library(rpart)
#install.packages("rpart.plot")
library(rpart.plot)
# Read in data
df <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header=FALSE, stringsAsFactors = FALSE)
# Preview data
head(df)
summary(df)
# Count observations per class
df %>%
count(V11)
# Copy original df
df_cleaning <- df
# Rename columns
df_cleaning <- rename (df_cleaning,
SampleCode=V1,
ClumpThickness=V2,
CellSize=V3,
CellShape=V4,
Adhesion=V5,
SingleEpithelialSize=V6,
BareNuclei=V7,
BlandChromatin=V8,
NormalNucleoli=V9,
Mitoses=V10,
Diagnosis=V11)
# Convert BareNuclei or V7 column to integer
df_cleaning$BareNuclei <- as.integer(df_cleaning$BareNuclei)
# Convert Diagnosis or V11 to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
# Set the levels of the Diagnosis factor to 0 and 1. This effectively assigns new labels to the existing factor levels.
levels(df_cleaning$Diagnosis) <- c(0, 1)
summary(df_cleaning)
head(df_cleaning)
# Dupes check
n_distinct(df_cleaning) # 691
# Zoom in on the dupes
duplicates <- df_cleaning %>%
filter(duplicated(.))
print(duplicates)
missing_col_summary <- colSums(is.na(df_cleaning))
print(missing_col_summary)
# Get a summary of missing values
miss_var_summary(df_cleaning)
print(sprintf("Percent of missing observation = %0.3f", 16/nrow(df_cleaning)*100))
# Visualize missing values
vis_miss(df_cleaning)
#---------------------- Mean imputation
df_cleaning.mean<-df_cleaning
df_cleaning.mean<-df_cleaning.mean %>% mutate_at(vars(BareNuclei),~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
# Double check mean imputation
head(df_cleaning.mean,24)
#---------------------- Mode imputation
# Find mode - look at reference 3
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
df_cleaning.mode<-df_cleaning
mode.result <- getmode(df_cleaning.mode$BareNuclei)
print(mode.result)
# Fill NAs with mode of 1s
df_cleaning.mode$BareNuclei[is.na(df_cleaning.mode$BareNuclei)] <- mode.result
#check it was imputed correctly
head(df_cleaning.mode,24)
# Calculate the proportion of missing values in the entire dataframe
total_missing <- sum(is.na(df_cleaning))
total_values <- prod(dim(df_cleaning))
missingness <- total_missing / total_values
# Print the proportion of missing data
print(missingness) # 0.002080895
# Set missing-ness variable value
missingness = 0.002080895
# Mean/Mode Imputation
df_imputed <- df_cleaning %>%
mutate(across(where(is.numeric), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .))) %>%
mutate(across(where(is.factor), ~ ifelse(is.na(.), names(sort(table(.), decreasing = TRUE))[1], .)))
# Check the imputed dataframe
head(df_imputed)
################# Correlation
# Correlation viz
df_cleaning_x <- select_if(df_cleaning, is.numeric)
cor(df_cleaning_x)
vis_cor(df_cleaning_x)
# Change Diagnosis from integer to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
pairwise <- ggpairs(df_cleaning, columns = 1:10, ggplot2::aes(colour = Diagnosis), lower=list(combo=wrap("facethist", binwidth=0.5)))
pairwise
################# Skewness
skew(df_cleaning_x)
df_cleaning %>%
add_prop_miss() %>%
rpart(prop_miss_all ~ ., data=.) %>%
prp(type=4, extra = 101, roundint=FALSE, prefix="Prop.Miss = ")
knitr::opts_chunk$set(echo = TRUE)
# Library imports
library(tidyverse)
library(data.table)
#install.packages("visdat")
library(visdat)
library(ggplot2)
#install.packages("naniar")
library(naniar)
library(GGally) #ggplot2 extension for pairs matrix
#install.packages("psych")
library(psych)
library(rpart)
#install.packages("rpart.plot")
library(rpart.plot)
# Read in data
df <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header=FALSE, stringsAsFactors = FALSE)
# Preview data
head(df)
summary(df)
# Count observations per class
df %>%
count(V11)
# Copy original df
df_cleaning <- df
# Rename columns
df_cleaning <- rename (df_cleaning,
SampleCode=V1,
ClumpThickness=V2,
CellSize=V3,
CellShape=V4,
Adhesion=V5,
SingleEpithelialSize=V6,
BareNuclei=V7,
BlandChromatin=V8,
NormalNucleoli=V9,
Mitoses=V10,
Diagnosis=V11)
# Convert BareNuclei or V7 column to integer
df_cleaning$BareNuclei <- as.integer(df_cleaning$BareNuclei)
# Convert Diagnosis or V11 to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
# Set the levels of the Diagnosis factor to 0 and 1. This effectively assigns new labels to the existing factor levels.
levels(df_cleaning$Diagnosis) <- c(0, 1)
summary(df_cleaning)
head(df_cleaning)
# Dupes check
n_distinct(df_cleaning) # 691
# Zoom in on the dupes
duplicates <- df_cleaning %>%
filter(duplicated(.))
print(duplicates)
missing_col_summary <- colSums(is.na(df_cleaning))
print(missing_col_summary)
# Get a summary of missing values
miss_var_summary(df_cleaning)
print(sprintf("Percent of missing observation = %0.3f", 16/nrow(df_cleaning)*100))
# Visualize missing values
vis_miss(df_cleaning)
#---------------------- Mean imputation
df_cleaning.mean<-df_cleaning
df_cleaning.mean<-df_cleaning.mean %>% mutate_at(vars(BareNuclei),~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
# Double check mean imputation
head(df_cleaning.mean,24)
#---------------------- Mode imputation
# Find mode - look at reference 3
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
df_cleaning.mode<-df_cleaning
mode.result <- getmode(df_cleaning.mode$BareNuclei)
print(mode.result)
# Fill NAs with mode of 1s
df_cleaning.mode$BareNuclei[is.na(df_cleaning.mode$BareNuclei)] <- mode.result
#check it was imputed correctly
head(df_cleaning.mode,24)
# Correlation viz
df_cleaning_x <- select_if(df_cleaning, is.numeric)
cor(df_cleaning_x)
vis_cor(df_cleaning_x)
# Change Diagnosis from integer to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
pairwise <- ggpairs(df_cleaning, columns = 1:10, ggplot2::aes(colour = Diagnosis), lower=list(combo=wrap("facethist", binwidth=0.5)))
pairwise
################# Skewness
skew(df_cleaning_x)
df_cleaning %>%
add_prop_miss() %>%
rpart(prop_miss_all ~ ., data=.) %>%
prp(type=4, extra = 101, roundint=FALSE, prefix="Prop.Miss = ")
set.seed(123)
newdata<-df_cleaning
missing.index<-which(is.na(newdata$BareNuclei), arr.ind=TRUE)
newdata.1 <- newdata[-missing.index,2:10] # all other predictors data points except for the missing value and response variable
lm(BareNuclei~ClumpThickness+CellSize+CellShape+Adhesion+SingleEpithelialSize+BlandChromatin+NormalNucleoli+Mitoses,data=newdata.1 )
summary(model)
set.seed(123)
newdata<-df_cleaning
missing.index<-which(is.na(newdata$BareNuclei), arr.ind=TRUE)
newdata.1 <- newdata[-missing.index,2:10] # all other predictors data points except for the missing value and response variable
model <- lm(BareNuclei~ClumpThickness+CellSize+CellShape+Adhesion+SingleEpithelialSize+BlandChromatin+NormalNucleoli+Mitoses,data=newdata.1 )
summary(model)
set.seed(123)
new_data<-df_cleaning
missing.index<-which(is.na(new_data$BareNuclei), arr.ind=TRUE)
new_data.1 <- new_data[-missing.index,2:10]
reg_model <- lm(BareNuclei~ClumpThickness+CellSize+CellShape+Adhesion+SingleEpithelialSize+BlandChromatin+NormalNucleoli+Mitoses,data=new_data.1 )
summary(reg_model)
# Correlation viz
df_cleaning_x <- select_if(df_cleaning, is.numeric)
cor(df_cleaning_x)
vis_cor(df_cleaning_x)
# Change Diagnosis from integer to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
pairwise <- ggpairs(df_cleaning, columns = 1:10, ggplot2::aes(colour = Diagnosis), lower=list(combo=wrap("facethist", binwidth=0.5)))
pairwise
################# Skewness
skew(df_cleaning_x)
df_cleaning %>%
add_prop_miss() %>%
rpart(prop_miss_all ~ ., data=.) %>%
prp(type=4, extra = 101, roundint=FALSE, prefix="Prop.Miss = ")
knitr::opts_chunk$set(echo = TRUE)
# Library imports
library(tidyverse)
library(data.table)
#install.packages("visdat")
library(visdat)
library(ggplot2)
#install.packages("naniar")
library(naniar)
library(GGally) #ggplot2 extension for pairs matrix
#install.packages("psych")
library(psych)
library(rpart)
#install.packages("rpart.plot")
library(rpart.plot)
# Read in data
df <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header=FALSE, stringsAsFactors = FALSE)
# Preview data
head(df)
summary(df)
# Count observations per class
df %>%
count(V11)
# Copy original df
df_cleaning <- df
# Rename columns
df_cleaning <- rename (df_cleaning,
SampleCode=V1,
ClumpThickness=V2,
CellSize=V3,
CellShape=V4,
Adhesion=V5,
SingleEpithelialSize=V6,
BareNuclei=V7,
BlandChromatin=V8,
NormalNucleoli=V9,
Mitoses=V10,
Diagnosis=V11)
# Convert BareNuclei or V7 column to integer
df_cleaning$BareNuclei <- as.integer(df_cleaning$BareNuclei)
# Convert Diagnosis or V11 to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
# Set the levels of the Diagnosis factor to 0 and 1. This effectively assigns new labels to the existing factor levels.
levels(df_cleaning$Diagnosis) <- c(0, 1)
summary(df_cleaning)
head(df_cleaning)
# Dupes check
n_distinct(df_cleaning) # 691
# Zoom in on the dupes
duplicates <- df_cleaning %>%
filter(duplicated(.))
print(duplicates)
missing_col_summary <- colSums(is.na(df_cleaning))
print(missing_col_summary)
# Get a summary of missing values
miss_var_summary(df_cleaning)
print(sprintf("Percent of missing observation = %0.3f", 16/nrow(df_cleaning)*100))
# Visualize missing values
vis_miss(df_cleaning)
# Correlation viz
df_cleaning_x <- select_if(df_cleaning, is.numeric)
cor(df_cleaning_x)
vis_cor(df_cleaning_x)
# Change Diagnosis from integer to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
pairwise <- ggpairs(df_cleaning, columns = 1:10, ggplot2::aes(colour = Diagnosis), lower=list(combo=wrap("facethist", binwidth=0.5)))
pairwise
################# Skewness
skew(df_cleaning_x)
df_cleaning %>%
add_prop_miss() %>%
rpart(prop_miss_all ~ ., data=.) %>%
prp(type=4, extra = 101, roundint=FALSE, prefix="Prop.Miss = ")
#---------------------- Mean imputation
df_cleaning.mean<-df_cleaning
df_cleaning.mean<-df_cleaning.mean %>% mutate_at(vars(BareNuclei),~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
# Double check mean imputation
head(df_cleaning.mean,24)
#---------------------- Mode imputation
# Find mode - look at reference 3
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
df_cleaning.mode<-df_cleaning
mode.result <- getmode(df_cleaning.mode$BareNuclei)
print(mode.result)
# Fill NAs with mode of 1s
df_cleaning.mode$BareNuclei[is.na(df_cleaning.mode$BareNuclei)] <- mode.result
#check it was imputed correctly
head(df_cleaning.mode,24)
set.seed(123)
new_data<-df_cleaning
missing.index<-which(is.na(new_data$BareNuclei), arr.ind=TRUE)
new_data.1 <- new_data[-missing.index,2:10]
reg_model <- lm(BareNuclei~ClumpThickness+CellSize+CellShape+Adhesion+SingleEpithelialSize+BlandChromatin+NormalNucleoli+Mitoses,data=new_data.1 )
summary(reg_model)
knitr::opts_chunk$set(echo = TRUE)
# Library imports
library(tidyverse)
library(data.table)
#install.packages("visdat")
library(visdat)
library(ggplot2)
#install.packages("naniar")
library(naniar)
library(GGally) #ggplot2 extension for pairs matrix
#install.packages("psych")
library(psych)
library(rpart)
#install.packages("rpart.plot")
library(rpart.plot)
# Read in data
df <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header=FALSE, stringsAsFactors = FALSE)
# Preview data
head(df)
summary(df)
# Count observations per class
df %>%
count(V11)
# Copy original df
df_cleaning <- df
# Rename columns
df_cleaning <- rename (df_cleaning,
SampleCode=V1,
ClumpThickness=V2,
CellSize=V3,
CellShape=V4,
Adhesion=V5,
SingleEpithelialSize=V6,
BareNuclei=V7,
BlandChromatin=V8,
NormalNucleoli=V9,
Mitoses=V10,
Diagnosis=V11)
# Convert BareNuclei or V7 column to integer
df_cleaning$BareNuclei <- as.integer(df_cleaning$BareNuclei)
# Convert Diagnosis or V11 to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
# Set the levels of the Diagnosis factor to 0 and 1. This effectively assigns new labels to the existing factor levels.
levels(df_cleaning$Diagnosis) <- c(0, 1)
summary(df_cleaning)
head(df_cleaning)
# Dupes check
n_distinct(df_cleaning) # 691
# Zoom in on the dupes
duplicates <- df_cleaning %>%
filter(duplicated(.))
print(duplicates)
missing_col_summary <- colSums(is.na(df_cleaning))
print(missing_col_summary)
# Get a summary of missing values
miss_var_summary(df_cleaning)
print(sprintf("Percent of missing observation = %0.3f", 16/nrow(df_cleaning)*100))
# Visualize missing values
vis_miss(df_cleaning)
# Look at reference 4
# Correlation viz
df_cleaning_x <- select_if(df_cleaning, is.numeric)
cor(df_cleaning_x)
vis_cor(df_cleaning_x)
# Change Diagnosis from integer to factor
df_cleaning$Diagnosis <- as.factor(df_cleaning$Diagnosis)
pairwise <- ggpairs(df_cleaning, columns = 1:10, ggplot2::aes(colour = Diagnosis), lower=list(combo=wrap("facethist", binwidth=0.5)))
pairwise
# Look at reference 4
skew(df_cleaning_x)
df_cleaning %>%
add_prop_miss() %>%
rpart(prop_miss_all ~ ., data=.) %>%
prp(type=4, extra = 101, roundint=FALSE, prefix="Prop.Miss = ")
#---------------------- Mean imputation
df_cleaning.mean<-df_cleaning
df_cleaning.mean<-df_cleaning.mean %>% mutate_at(vars(BareNuclei),~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x))
# Double check mean imputation
head(df_cleaning.mean,24)
#---------------------- Mode imputation
# Find mode - look at reference 3
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
df_cleaning.mode<-df_cleaning
mode.result <- getmode(df_cleaning.mode$BareNuclei)
print(mode.result)
# Fill NAs with mode of 1s
df_cleaning.mode$BareNuclei[is.na(df_cleaning.mode$BareNuclei)] <- mode.result
#check it was imputed correctly
head(df_cleaning.mode,24)
set.seed(123)
new_data<-df_cleaning
missing.index<-which(is.na(new_data$BareNuclei), arr.ind=TRUE)
new_data.1 <- new_data[-missing.index,2:10]
reg_model <- lm(BareNuclei~ClumpThickness+CellSize+CellShape+Adhesion+SingleEpithelialSize+BlandChromatin+NormalNucleoli+Mitoses,data=new_data.1 )
summary(reg_model)
