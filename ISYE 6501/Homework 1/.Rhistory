# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(as.matrix(data[,1:10]),data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(x=as.matrix(credit.data[,1:10]),y=as.factor(credit.data[,11]),
scaled=T,type="C-svc",kernel="vanilladot",C=100)
knitr::opts_chunk$set(echo = TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(data[,1:10],data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(data[,1:10],data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
knitr::opts_chunk$set(echo = TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(data[,1:10],data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(data[,1:10],data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(data[,1:10],data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(data[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11],type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert txt to matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
# see what the model predicts
pred <- predict(model,data[,1:10])
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
# see what the model predicts
pred <- predict(model,data[,1:10])
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# model errors
model@error
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
# see what the model predicts
pred <- predict(model,data[,1:10])
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# model errors
model@error
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
# see what the model predicts
pred <- predict(model,data[,1:10])
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# model errors
model@error
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
# see what the model predicts
pred <- predict(model,credit_matrix[,1:10])
pred
# see what fraction of the model’s predictions match the actual classification
sum(pred == credit_matrix[,11]) / nrow(credit_matrix)
knitr::opts_chunk$set(echo = TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
#credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
# see what the model predicts
pred <- predict(model,credit_matrix[,1:10])
pred
# see what fraction of the model’s predictions match the actual classification
sum(pred == credit_matrix[,11]) / nrow(credit_matrix)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
"
console:
V1            V2            V3            V4            V5            V6            V7            V8            V9           V10
-0.0010065348 -0.0011729048 -0.0016261967  0.0030064203  1.0049405641 -0.0028259432  0.0002600295 -0.0005349551 -0.0012283758  0.1063633995
"
# calculate a0
a0 <- -model@b
a0
"
console:
0.08158492
"
#------------------------- predicting the data
# see what the model predicts
pred <- predict(model,credit_matrix[,1:10])
pred
"
console:
[1] 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[104] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[207] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0
[310] 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[413] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[516] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[619] 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Levels: 0 1
"
# see what fraction of the model’s predictions match the actual classification
sum(pred == credit_matrix[,11]) / nrow(credit_matrix)
knitr::opts_chunk$set(echo = TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
"
console:
V1            V2            V3            V4            V5            V6            V7            V8            V9           V10
-0.0010065348 -0.0011729048 -0.0016261967  0.0030064203  1.0049405641 -0.0028259432  0.0002600295 -0.0005349551 -0.0012283758  0.1063633995
"
# calculate a0
a0 <- -model@b
a0
"
console:
0.08158492
"
#------------------------- predicting the data
# see what the model predicts
pred <- predict(model,credit_matrix[,1:10])
pred
"
console:
[1] 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[104] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[207] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0
[310] 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[413] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[516] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[619] 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Levels: 0 1
"
# see what fraction of the model’s predictions match the actual classification
sum(pred == credit_matrix[,11]) / nrow(credit_matrix)
knitr::opts_chunk$set(echo = TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
#------------------------- predicting the data
# see what the model predicts
pred <- predict(model,credit_matrix[,1:10])
knitr::opts_chunk$set(echo = TRUE)
#------------------------- getting a sense of the data
# read in credit_card_data data (source: https://teacherscollege.screenstepslive.com/a/1126998-import-data-into-r-txt-files-in-r-studio)
credit <- read.table("C://Users//Clair//OneDrive//Documents//Fall 2024//IYSE 6501//hw1//data 2.2//credit_card_data.txt", sep="\t", header=FALSE)
# get summary of basic stats on the df
summary(credit)
# get dimension of df, row x column
dim(credit)
# look for null values
print("Count of total missing values: ")
sum(is.na(credit))
#------------------------- manipulating the data
# convert .txt > df > matrix (source: https://stackoverflow.com/questions/46518838/how-to-convert-table-to-matrix-in-r)
credit_matrix <- data.matrix(credit)
credit_matrix
#------------------------- training the data
#install.packages("kernlab")
library(kernlab)
# call ksvm.  Vanilladot is a simple linear kernel.
model <- ksvm(credit_matrix[,1:10],as.factor(credit_matrix[,11]),type="C-svc",kernel="vanilladot",C=100,scaled=TRUE)
# calculate a1…am
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a
# calculate a0
a0 <- -model@b
a0
#------------------------- predicting the data
# see what the model predicts
pred <- predict(model,credit_matrix[,1:10])
pred
# see what fraction of the model’s predictions match the actual classification
sum(pred == credit_matrix[,11]) / nrow(credit_matrix)
